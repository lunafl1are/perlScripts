<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="TestDataSet" targetNamespace="http://tempuri.org/TestDataSet.xsd" xmlns:mstns="http://tempuri.org/TestDataSet.xsd" xmlns="http://tempuri.org/TestDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="TestConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="TestConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.CourseWork.Properties.Settings.GlobalReference.Default.TestConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="JobTableAdapter" GeneratorDataComponentClassName="JobTableAdapter" Name="Job" UserDataComponentName="JobTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TestConnectionString (Settings)" DbObjectName="Test.dbo.Job" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Job] WHERE (([Job_speciality] = @Original_Job_speciality) AND ([Person_name] = @Original_Person_name) AND ([Job_salary] = @Original_Job_salary))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Job_speciality" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Job_speciality" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Person_name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Person_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_Job_salary" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="Job_salary" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Job] ([Job_speciality], [Person_name], [Job_salary]) VALUES (@Job_speciality, @Person_name, @Job_salary);
SELECT Job_speciality, Person_name, Job_salary FROM Job WHERE (Job_speciality = @Job_speciality)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Job_speciality" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Job_speciality" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Person_name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Person_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Job_salary" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="Job_salary" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Job_speciality, Person_name, Job_salary FROM dbo.Job</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Job] SET [Job_speciality] = @Job_speciality, [Person_name] = @Person_name, [Job_salary] = @Job_salary WHERE (([Job_speciality] = @Original_Job_speciality) AND ([Person_name] = @Original_Person_name) AND ([Job_salary] = @Original_Job_salary));
SELECT Job_speciality, Person_name, Job_salary FROM Job WHERE (Job_speciality = @Job_speciality)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Job_speciality" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Job_speciality" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Person_name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Person_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Job_salary" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="Job_salary" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Job_speciality" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Job_speciality" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Person_name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Person_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_Job_salary" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="Job_salary" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Job_speciality" DataSetColumn="Job_speciality" />
              <Mapping SourceColumn="Person_name" DataSetColumn="Person_name" />
              <Mapping SourceColumn="Job_salary" DataSetColumn="Job_salary" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PersonTableAdapter" GeneratorDataComponentClassName="PersonTableAdapter" Name="Person" UserDataComponentName="PersonTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TestConnectionString (Settings)" DbObjectName="Test.dbo.Person" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Person] WHERE (([Person_name] = @Original_Person_name) AND ([Person_phone] = @Original_Person_phone) AND ([Person_address] = @Original_Person_address))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Person_name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Person_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_Person_phone" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="Person_phone" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Person_address" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Person_address" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Person] ([Person_name], [Person_phone], [Person_address]) VALUES (@Person_name, @Person_phone, @Person_address);
SELECT Person_name, Person_phone, Person_address FROM Person WHERE (Person_name = @Person_name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Person_name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Person_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Person_phone" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="Person_phone" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Person_address" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Person_address" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Person_name, Person_phone, Person_address FROM dbo.Person</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Person] SET [Person_name] = @Person_name, [Person_phone] = @Person_phone, [Person_address] = @Person_address WHERE (([Person_name] = @Original_Person_name) AND ([Person_phone] = @Original_Person_phone) AND ([Person_address] = @Original_Person_address));
SELECT Person_name, Person_phone, Person_address FROM Person WHERE (Person_name = @Person_name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Person_name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Person_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Person_phone" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="Person_phone" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Person_address" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Person_address" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Person_name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Person_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_Person_phone" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="Person_phone" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Person_address" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Person_address" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Person_name" DataSetColumn="Person_name" />
              <Mapping SourceColumn="Person_phone" DataSetColumn="Person_phone" />
              <Mapping SourceColumn="Person_address" DataSetColumn="Person_address" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TeamTableAdapter" GeneratorDataComponentClassName="TeamTableAdapter" Name="Team" UserDataComponentName="TeamTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TestConnectionString (Settings)" DbObjectName="Test.dbo.Team" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Team] WHERE (([Team_name] = @Original_Team_name) AND ([Job_speciality] = @Original_Job_speciality) AND ([Person_name] = @Original_Person_name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Team_name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Team_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Job_speciality" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Job_speciality" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Person_name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Person_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Team] ([Team_name], [Job_speciality], [Person_name]) VALUES (@Team_name, @Job_speciality, @Person_name);
SELECT Team_name, Job_speciality, Person_name FROM Team WHERE (Team_name = @Team_name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Team_name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Team_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Job_speciality" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Job_speciality" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Person_name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Person_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Team_name, Job_speciality, Person_name FROM dbo.Team</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Team] SET [Team_name] = @Team_name, [Job_speciality] = @Job_speciality, [Person_name] = @Person_name WHERE (([Team_name] = @Original_Team_name) AND ([Job_speciality] = @Original_Job_speciality) AND ([Person_name] = @Original_Person_name));
SELECT Team_name, Job_speciality, Person_name FROM Team WHERE (Team_name = @Team_name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Team_name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Team_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Job_speciality" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Job_speciality" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Person_name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Person_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Team_name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Team_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Job_speciality" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Job_speciality" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Person_name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Person_name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Team_name" DataSetColumn="Team_name" />
              <Mapping SourceColumn="Job_speciality" DataSetColumn="Job_speciality" />
              <Mapping SourceColumn="Person_name" DataSetColumn="Person_name" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="TestDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="TestDataSet" msprop:Generator_UserDSName="TestDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Job" msprop:Generator_TableClassName="JobDataTable" msprop:Generator_TableVarName="tableJob" msprop:Generator_TablePropName="Job" msprop:Generator_RowDeletingName="JobRowDeleting" msprop:Generator_RowChangingName="JobRowChanging" msprop:Generator_RowEvHandlerName="JobRowChangeEventHandler" msprop:Generator_RowDeletedName="JobRowDeleted" msprop:Generator_UserTableName="Job" msprop:Generator_RowChangedName="JobRowChanged" msprop:Generator_RowEvArgName="JobRowChangeEvent" msprop:Generator_RowClassName="JobRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Job_speciality" msprop:Generator_ColumnVarNameInTable="columnJob_speciality" msprop:Generator_ColumnPropNameInRow="Job_speciality" msprop:Generator_ColumnPropNameInTable="Job_specialityColumn" msprop:Generator_UserColumnName="Job_speciality">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Person_name" msprop:Generator_ColumnVarNameInTable="columnPerson_name" msprop:Generator_ColumnPropNameInRow="Person_name" msprop:Generator_ColumnPropNameInTable="Person_nameColumn" msprop:Generator_UserColumnName="Person_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Job_salary" msprop:Generator_ColumnVarNameInTable="columnJob_salary" msprop:Generator_ColumnPropNameInRow="Job_salary" msprop:Generator_ColumnPropNameInTable="Job_salaryColumn" msprop:Generator_UserColumnName="Job_salary" type="xs:decimal" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Person" msprop:Generator_TableClassName="PersonDataTable" msprop:Generator_TableVarName="tablePerson" msprop:Generator_TablePropName="Person" msprop:Generator_RowDeletingName="PersonRowDeleting" msprop:Generator_RowChangingName="PersonRowChanging" msprop:Generator_RowEvHandlerName="PersonRowChangeEventHandler" msprop:Generator_RowDeletedName="PersonRowDeleted" msprop:Generator_UserTableName="Person" msprop:Generator_RowChangedName="PersonRowChanged" msprop:Generator_RowEvArgName="PersonRowChangeEvent" msprop:Generator_RowClassName="PersonRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Person_name" msprop:Generator_ColumnVarNameInTable="columnPerson_name" msprop:Generator_ColumnPropNameInRow="Person_name" msprop:Generator_ColumnPropNameInTable="Person_nameColumn" msprop:Generator_UserColumnName="Person_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Person_phone" msprop:Generator_ColumnVarNameInTable="columnPerson_phone" msprop:Generator_ColumnPropNameInRow="Person_phone" msprop:Generator_ColumnPropNameInTable="Person_phoneColumn" msprop:Generator_UserColumnName="Person_phone" type="xs:long" />
              <xs:element name="Person_address" msprop:Generator_ColumnVarNameInTable="columnPerson_address" msprop:Generator_ColumnPropNameInRow="Person_address" msprop:Generator_ColumnPropNameInTable="Person_addressColumn" msprop:Generator_UserColumnName="Person_address">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Team" msprop:Generator_TableClassName="TeamDataTable" msprop:Generator_TableVarName="tableTeam" msprop:Generator_TablePropName="Team" msprop:Generator_RowDeletingName="TeamRowDeleting" msprop:Generator_RowChangingName="TeamRowChanging" msprop:Generator_RowEvHandlerName="TeamRowChangeEventHandler" msprop:Generator_RowDeletedName="TeamRowDeleted" msprop:Generator_UserTableName="Team" msprop:Generator_RowChangedName="TeamRowChanged" msprop:Generator_RowEvArgName="TeamRowChangeEvent" msprop:Generator_RowClassName="TeamRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Team_name" msprop:Generator_ColumnVarNameInTable="columnTeam_name" msprop:Generator_ColumnPropNameInRow="Team_name" msprop:Generator_ColumnPropNameInTable="Team_nameColumn" msprop:Generator_UserColumnName="Team_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Job_speciality" msprop:Generator_ColumnVarNameInTable="columnJob_speciality" msprop:Generator_ColumnPropNameInRow="Job_speciality" msprop:Generator_ColumnPropNameInTable="Job_specialityColumn" msprop:Generator_UserColumnName="Job_speciality">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Person_name" msprop:Generator_ColumnVarNameInTable="columnPerson_name" msprop:Generator_ColumnPropNameInRow="Person_name" msprop:Generator_ColumnPropNameInTable="Person_nameColumn" msprop:Generator_UserColumnName="Person_name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Job" />
      <xs:field xpath="mstns:Job_speciality" />
    </xs:unique>
    <xs:unique name="Person_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Person" />
      <xs:field xpath="mstns:Person_name" />
    </xs:unique>
    <xs:unique name="Team_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Team" />
      <xs:field xpath="mstns:Team_name" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Job_Person" msdata:parent="Person" msdata:child="Job" msdata:parentkey="Person_name" msdata:childkey="Person_name" msprop:Generator_UserChildTable="Job" msprop:Generator_ChildPropName="GetJobRows" msprop:Generator_UserRelationName="FK_Job_Person" msprop:Generator_RelationVarName="relationFK_Job_Person" msprop:Generator_UserParentTable="Person" msprop:Generator_ParentPropName="PersonRow" />
      <msdata:Relationship name="FK_Team_Job" msdata:parent="Job" msdata:child="Team" msdata:parentkey="Job_speciality" msdata:childkey="Job_speciality" msprop:Generator_UserChildTable="Team" msprop:Generator_ChildPropName="GetTeamRows" msprop:Generator_UserRelationName="FK_Team_Job" msprop:Generator_ParentPropName="JobRow" msprop:Generator_RelationVarName="relationFK_Team_Job" msprop:Generator_UserParentTable="Job" />
      <msdata:Relationship name="FK_Team_Person" msdata:parent="Person" msdata:child="Team" msdata:parentkey="Person_name" msdata:childkey="Person_name" msprop:Generator_UserChildTable="Team" msprop:Generator_ChildPropName="GetTeamRows" msprop:Generator_UserRelationName="FK_Team_Person" msprop:Generator_ParentPropName="PersonRow" msprop:Generator_RelationVarName="relationFK_Team_Person" msprop:Generator_UserParentTable="Person" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>